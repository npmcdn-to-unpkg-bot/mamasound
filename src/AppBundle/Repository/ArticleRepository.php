<?php

namespace AppBundle\Repository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository
{
	
	public function getArticlesIndex(){
		/*
		$qb = $this -> _em -> createQueryBuilder()
					-> select('a')
					-> from ('AppBundle:Article', 'a');
		*/
		$pub=1;
		$qb = $this -> createQueryBuilder('a')
					-> leftJoin('a.image', 'i')
					-> addSelect('i')
					-> leftJoin('a.categories', 'c')
					-> addSelect('c')
					-> where('a.publication= :pub')
					-> setParameter('pub', $pub)
					-> orderBy('a.date', 'DESC');
		$query = $qb -> getQuery();
		//return $query -> getResult();
		return $query -> getArrayResult();
	}
	
	public function getArticlesIndexByPage($pageNumber, $length){
		return $this -> getArticlesIndexByOffset(($pageNumber - 1) * $length, $length);
	}
	
	public function getArticlesIndexByOffset($offset, $length){
		$pub=1;
		$qb = $this -> createQueryBuilder('a')
			-> leftJoin('a.image', 'i')
			-> addSelect('i')
			-> leftJoin('a.categories', 'c')
			-> addSelect('c')
			-> where('a.publication= :pub')
			-> setParameter('pub', $pub)
			-> setFirstResult($offset)
			-> setMaxResults($length)
			-> orderBy('a.date', 'DESC')
		;
		$query = $qb -> getQuery();
// 		return $query -> getResult();
		return new \Doctrine\ORM\Tools\Pagination\Paginator($query);
		//return $query -> getArrayResult();
	}
	
	public function getArticlesByCategory($category){
		$qb = $this -> createQueryBuilder('a')
					-> where('a.publication=true')
					-> leftJoin('a.image', 'i')
					-> addSelect('i')
					-> leftJoin('a.categories', 'c')
					-> andwhere('c.title= :cat_title')
					-> setParameter('cat_title', $category -> getTitle())
					-> orderBy('a.title', 'DESC');
		$query = $qb -> getQuery();
		return $query -> getResult();
		//return $query -> getArrayResult();
	}
	
	public function countArticles(){
		$this -> _em -> createQuery('SELECT COUNT(a.id) FROM AppBundle:Article a');
		$count = $query->getSingleScalarResult();
		return $count;
	}
	
	public function countArticlesByCategory($category){
		$query = $this -> _em -> createQuery(
				'SELECT COUNT(a.id) FROM AppBundle:Article a LEFT JOIN a.categories c WHERE c.title=:titre' 
				)->setParameter('titre',$category->getTitle());
		$count = $query->getSingleScalarResult();
		return $count;
	}
	
	public function countArticlesByCategory2($category){
		$qb = $this -> createQueryBuilder('a')
					-> select("COUNT (a.id)")
					-> leftJoin('a.categories', 'c')
					-> where('c.title= :cat_title')
					-> setParameter('cat_title', $category -> getTitle());
		$count = $qb -> getQuery() -> getSingleScalarResult();
		return $count;
	}
}
